@page "/s/{id:guid}"

@inject MySurvey.Core.Settings.SiteSetting SiteSetting
@model MySurvey.Server.Pages.SurveyInfoModel
@{
    Layout = null;
}

<html>
<head>
    <title>参与调查 - @(Model.Survey?.Title)</title>
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        /* 页脚样式 */
        .footer { padding: 10px 0; margin-top: 20px; background-color: #f8f9fa; border-top: 1px solid #e7e7e7; }
        .footer-content { text-align: center; color: #6c757d; }
        .copyright { margin-top: 15px; font-size: 0.9rem; }

        /* 错误提示样式 */
        .invalid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-size: 80%; color: #dc3545; }

        .was-validated .form-control:invalid,
        .form-control.is-invalid { border-color: #dc3545; padding-right: calc(1.5em + 0.75rem); background-repeat: no-repeat; background-position: right calc(0.375em + 0.1875rem) center; background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem); }

            .was-validated .form-control:invalid ~ .invalid-feedback,
            .form-control.is-invalid ~ .invalid-feedback { display: block; }

        .checkbox-group.is-invalid .form-check-label { color: #dc3545; }

        .checkbox-group.is-invalid ~ .invalid-feedback { display: block; }
    </style>
</head>
<body>
    <div class="container mt-4">
        @if (Model.Survey != null)
        {
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h2>@Model.Survey.Title</h2>
                </div>
                <div class="card-body">
                    <p class="lead">@Model.Survey.Description</p>
                    <form method="post" asp-page="/SurveyInfo" asp-route-id="@Model.Survey.Id" id="surveyForm" class="needs-validation" novalidate>
                        
                        @Html.AntiForgeryToken()
                        
                        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger">
                                @Model.ErrorMessage
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                        {
                            <div class="alert alert-success">
                                @Model.SuccessMessage
                            </div>
                        }
                        @if (!ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <ul>
                                    @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                                    {
                                        <li>@error.ErrorMessage</li>
                                    }
                                </ul>
                            </div>
                        }

                        @if (Model.Survey.Questions != null && Model.Survey.Questions.Any())
                        {
                            <div class="list-group mb-4">
                                @for (int i = 0; i < Model.Survey.Questions.Count; i++)
                                {
                                    var question = Model.Survey.Questions.ToArray()[i];
                                    <div class="list-group-item" data-question-type="@question.Type" data-question-required="@question.IsRequired">
                                        <h5 class="mb-3">@(i + 1). @question.Title @(question.IsRequired? Html.Raw("<span class='text-danger'>*</span>") : "")</h5>

                                        @switch (question.Type)
                                        {
                                            case MySurvey.Core.Entities.QuestionType.SingleChoice:
                                                @if (question.Options != null)
                                                {
                                                    <div class="form-group" id="question-@question.Id">
                                                        @foreach (var option in question.Options)
                                                        {
                                                            var isChecked = Model.SelectedSingleChoiceValues.TryGetValue(question.Id, out var selectedValue)
                                                            && selectedValue == option.Id.ToString();

                                                            <div class="form-check">
                                                                <input class="form-check-input single-choice" type="radio"
                                                                       name="Answers[@i].Value" value="@option.Id"
                                                                       id="q@(i)_@option.Id"
                                                                       data-validation="required:@question.IsRequired"
                                                                       @(isChecked ? "checked" : "")
                                                                       @(option.IsDefault && !Model.SelectedSingleChoiceValues.ContainsKey(question.Id) ? "checked" : "")
                                                                       @(question.IsRequired ? "required" : "")>
                                                                <label class="form-check-label" for="q@(i)_@option.Id">
                                                                    @option.Content
                                                                </label>
                                                            </div>
                                                        }
                                                        <div class="invalid-feedback">
                                                            请选择一个选项
                                                        </div>
                                                    </div>
                                                }
                                                break;
                                            case MySurvey.Core.Entities.QuestionType.MultipleChoice:
                                                @if (question.Options != null)
                                                {
                                                    <div class="form-group checkbox-group" id="question-@question.Id"
                                                         data-validation="required:@question.IsRequired">
                                                        @foreach (var option in question.Options)
                                                        {
                                                            var isChecked = Model.SelectedMultipleChoiceValues.TryGetValue(question.Id, out var selectedValues)
                                                            && selectedValues.Contains(option.Id.ToString());

                                                            <div class="form-check">
                                                                <input class="form-check-input multiple-choice" type="checkbox"
                                                                       name="Answers[@i].Values" value="@option.Id"
                                                                       id="q@(i)_@option.Id"
                                                                       data-group="question-@question.Id"
                                                                       @(isChecked ? "checked" : "")
                                                                       @(option.IsDefault && !Model.SelectedMultipleChoiceValues.ContainsKey(question.Id) ? "checked" : "")>
                                                                <label class="form-check-label" for="q@(i)_@option.Id">
                                                                    @option.Content
                                                                </label>
                                                            </div>
                                                        }
                                                        <div class="invalid-feedback">
                                                            请至少选择一个选项
                                                        </div>
                                                    </div>
                                                }
                                                break;
                                            case MySurvey.Core.Entities.QuestionType.TextInput:
                                                <div class="form-group">
                                                    @{
                                                        var textValue = Model.SelectedTextValues.TryGetValue(question.Id, out var text) ? text : "";
                                                    }
                                                    <textarea class="form-control text-input" name="Answers[@i].Value"
                                                              rows="3" id="question-@question.Id"
                                                              data-validation="required:@question.IsRequired"
                                                              @if (question.ValidationRuleType.HasValue && question.ValidationRuleType != MySurvey.Core.Entities.ValidationRuleType.None)
                                                              {
                                                                  @:data-validation-type="@((int)question.ValidationRuleType)"
                                                                  if (question.ValidationRuleType == MySurvey.Core.Entities.ValidationRuleType.Custom && !string.IsNullOrEmpty(question.CustomValidationPattern))
                                                                  {
                                                                      @:data-validation-pattern="@question.CustomValidationPattern"
                                                                  }
                                                                  if (!string.IsNullOrEmpty(question.ValidationErrorMessage))
                                                                  {
                                                                      @:data-validation-message="@question.ValidationErrorMessage"
                                                                  }
                                                              }
                                                              @(question.IsRequired ? "required" : "")>@textValue</textarea>
                                                    <div class="invalid-feedback">
                                                        @if (!string.IsNullOrEmpty(question.ValidationErrorMessage))
                                                        {
                                                            @question.ValidationErrorMessage
                                                        }
                                                        else
                                                        {
                                                            <span>请填写此字段</span>
                                                        }
                                                    </div>
                                                </div>
                                                break;
                                            case MySurvey.Core.Entities.QuestionType.Rating:
                                                <div class="form-group">
                                                    <div class="btn-group" role="group" id="question-@question.Id">
                                                        @for (int r = 1; r <= 5; r++)
                                                        {
                                                            var isChecked = Model.SelectedRatingValues.TryGetValue(question.Id, out var ratingValue)
                                                            && ratingValue == r.ToString();

                                                            <input type="radio" class="btn-check rating-input" name="Answers[@i].Value"
                                                                   value="@r" id="q@(i)_@r" autocomplete="off"
                                                                   data-validation="required:@question.IsRequired"
                                                                   @(isChecked ? "checked" : "")
                                                                   @(question.IsRequired ? "required" : "")>
                                                            <label class="btn btn-outline-primary" for="q@(i)_@r">@r</label>
                                                        }
                                                    </div>
                                                    <div class="invalid-feedback">
                                                        请选择一个评分
                                                    </div>
                                                </div>
                                                break;
                                        }
                                        <input type="hidden" name="Answers[@i].QuestionId" value="@question.Id" />
                                    </div>
                                }
                            </div>

                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary btn-lg">提交回答</button>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                此调查暂无问题。
                            </div>
                        }
                    </form>
                </div>
                <div class="card-footer text-muted">
                    <small>开始日期: @Model.Survey.StartTime.ToShortDateString() | 结束日期: @Model.Survey.EndTime.ToShortDateString()</small>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-danger">
                未找到此调查或调查已结束。
            </div>
        }
    </div>

    <!-- 添加页脚 -->
    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <div class="copyright">
                    <p>&copy; @DateTime.Now.Year @SiteSetting.SiteName - @SiteSetting.SiteDescription</p>
                </div>
            </div>
        </div>
    </footer>

    <script>
        // 验证正则表达式和错误信息代码保持不变
        // ...其余JavaScript代码不变...
    </script>
</body>
</html>